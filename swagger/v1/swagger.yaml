openapi: 3.0.0
info:
  title: Movie Explorer+ API
  version: v1.0.0
  description: API for managing movies, users, and subscriptions in Movie Explorer+, a movie streaming platform.
  contact:
    email: support@movieexplorer.com
    url: https://movieexplorer.com/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://movie-explorer-ror-vishal-kanojia.onrender.com
    description: Production server
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained via /api/v1/users/sign_in or /api/v1/users
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        genre:
          type: string
        release_year:
          type: integer
        rating:
          type: number
          format: float
        director:
          type: string
        duration:
          type: integer
        main_lead:
          type: string
        streaming_platform:
          type: string
        description:
          type: string
        premium:
          type: boolean
        poster_url:
          type: string
          nullable: true
          description: Cloudinary URL for the movie poster
        banner_url:
          type: string
          nullable: true
          description: Cloudinary URL for the movie banner
      required:
        - id
        - title
        - genre
        - release_year
        - rating
        - director
        - duration
        - main_lead
        - streaming_platform
        - description
        - premium
      example:
        id: 1
        title: "Inception"
        genre: "Sci-Fi"
        release_year: 2010
        rating: 8.8
        director: "Christopher Nolan"
        duration: 148
        main_lead: "Leonardo DiCaprio"
        streaming_platform: "Netflix"
        description: "A thief with the ability to enter dreams..."
        premium: true
        poster_url: "https://res.cloudinary.com/xxx/image/upload/poster.jpg"
        banner_url: "https://res.cloudinary.com/xxx/image/upload/banner.jpg"
    MovieList:
      type: object
      properties:
        movies:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        meta:
          type: object
          properties:
            current_page:
              type: integer
            total_pages:
              type: integer
          required:
            - current_page
            - total_pages
      required:
        - movies
        - meta
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        mobile_number:
          type: string
        role:
          type: string
          enum: [user, supervisor]
        created_at:
          type: string
          format: date-time
          description: ISO 8601 formatted timestamp
        updated_at:
          type: string
          format: date-time
          description: ISO 8601 formatted timestamp
        profile_picture_url:
          type: string
          nullable: true
          description: Cloudinary URL for the userâ€™s profile picture (resized to 200x200)
      required:
        - id
        - email
        - first_name
        - last_name
        - mobile_number
        - role
        - created_at
        - updated_at
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token for authentication
        user:
          $ref: '#/components/schemas/User'
      required:
        - token
        - user
    SubscriptionCreateRequest:
      type: object
      required:
        - plan_id
      properties:
        plan_id:
          type: string
          enum: [free, basic, premium]
          description: The ID of the subscription plan
          example: premium
    SubscriptionStatusResponse:
      type: object
      properties:
        plan:
          type: string
          enum: [free, basic, premium]
          description: The current subscription plan
          example: premium
        status:
          type: string
          enum: [pending, active, canceled, past_due]
          description: Status of the subscription
          example: active
        current_period_end:
          type: string
          format: date-time
          nullable: true
          description: ISO 8601 formatted timestamp; end date of the current billing period (null for free plans)
          example: "2025-12-31T23:59:59Z"
      required:
        - plan
        - status
    SubscriptionPaymentIntentResponse:
      type: object
      properties:
        client_secret:
          type: string
          description: The client secret for the Stripe Payment Intent
          example: pi_3Nxyz_secret_123
        payment_intent_id:
          type: string
          description: The ID of the Stripe Payment Intent
          example: pi_3Nxyz
        subscription_id:
          type: integer
          description: The ID of the subscription in the database
          example: 1
      required:
        - client_secret
        - payment_intent_id
        - subscription_id
    SubscriptionConfirmRequest:
      type: object
      required:
        - payment_intent_id
      properties:
        payment_intent_id:
          type: string
          description: The ID of the Stripe Payment Intent to confirm
          example: pi_3Nxyz
    SubscriptionConfirmResponse:
      type: object
      properties:
        plan:
          type: string
          enum: [free, basic, premium]
          description: The subscription plan
          example: premium
        status:
          type: string
          enum: [pending, active, canceled, past_due]
          description: The status of the subscription
          example: active
        current_period_end:
          type: string
          format: date-time
          nullable: true
          description: ISO 8601 formatted timestamp; end date of the current billing period
          example: "2025-12-31T23:59:59Z"
      required:
        - plan
        - status
    SubscriptionCancelResponse:
      type: object
      properties:
        message:
          type: string
          description: Confirmation message for cancellation
          example: Subscription canceled successfully. You will revert to the free plan after 2025-12-31T23:59:59Z.
        plan:
          type: string
          enum: [free, basic, premium]
          description: The current subscription plan
          example: premium
        status:
          type: string
          enum: [pending, active, canceled, past_due]
          description: Status of the subscription
          example: canceled
        current_period_end:
          type: string
          format: date-time
          nullable: true
          description: ISO 8601 formatted timestamp; end date of the current billing period (null for free plans)
          example: "2025-12-31T23:59:59Z"
      required:
        - message
        - plan
        - status
    WebhookResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
          description: Status of webhook processing
          example: success
      required:
        - status
    Error:
      type: object
      properties:
        error:
          type: string
          description: A brief error message
          example: Invalid request
        errors:
          type: array
          items:
            type: string
          description: Detailed error messages
          example: ["Plan ID is invalid"]
      required:
        - error
        - errors
    DeviceTokenResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    SignOutResponse:
      type: object
      properties:
        message:
          type: string
          description: Confirmation message
        jti:
          type: string
          description: The JTI of the revoked token
      required:
        - message
        - jti
security:
  - Bearer: []
paths:
  /api/v1/users/sign_in:
    post:
      summary: User login
      tags:
        - Authentication
      description: Authenticates a user and returns a JWT token. Rate limited to 10 requests per minute per IP.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
              example:
                token: eyJhbGciOiJIUzI1NiJ9...
                user:
                  id: 1
                  email: user@example.com
                  first_name: John
                  last_name: Doe
                  mobile_number: +1234567890
                  role: user
                  created_at: "2025-05-21T17:01:00Z"
                  updated_at: "2025-05-21T17:01:00Z"
                  profile_picture_url: null
        "401":
          description: Invalid email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/users/sign_out:
    delete:
      summary: User logout
      tags:
        - Authentication
      description: Logs out a user and revokes their JWT token. Returns a confirmation message and the revoked JTI, along with headers X-Revoked and X-JTI.
      security:
        - Bearer: []
      responses:
        "200":
          description: Successful sign-out
          headers:
            X-Revoked:
              schema:
                type: string
                enum: ["true"]
              description: Indicates the token was successfully revoked
            X-JTI:
              schema:
                type: string
              description: The JTI of the revoked token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignOutResponse"
        "401":
          description: Unauthorized (user not authenticated or token missing)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity (invalid or malformed JWT token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/users:
    post:
      summary: User registration
      tags:
        - Authentication
      description: Registers a new user and returns a JWT token. Profile picture upload is not supported during signup. Rate limited to 5 requests per minute per IP.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Doe
                    mobile_number:
                      type: string
                      example: +1234567890
                    role:
                      type: string
                      enum: [user, supervisor]
                      example: user
                  required:
                    - email
                    - password
                    - first_name
                    - last_name
                    - mobile_number
                    - role
              required:
                - user
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
              example:
                token: eyJhbGciOiJIUzI1NiJ9...
                user:
                  id: 1
                  email: user@example.com
                  first_name: John
                  last_name: Doe
                  mobile_number: +1234567890
                  role: user
                  created_at: "2025-05-21T17:01:00Z"
                  updated_at: "2025-05-21T17:01:00Z"
                  profile_picture_url: null
        "422":
          description: Unprocessable Entity (e.g., invalid email, missing fields)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Unprocessable Entity
                errors:
                  - Email has already been taken
                  - Password is too short
  /api/v1/users/me:
    get:
      summary: Get current user details
      tags:
        - Users
      description: Returns the authenticated userâ€™s details, including profile picture URL. Requires a valid JWT token. Rate limited to 20 requests per minute per user.
      security:
        - Bearer: []
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
              example:
                user:
                  id: 1
                  email: user@example.com
                  first_name: John
                  last_name: Doe
                  mobile_number: +1234567890
                  role: user
                  created_at: "2025-05-21T17:01:00Z"
                  updated_at: "2025-05-21T17:01:00Z"
                  profile_picture_url: null
        "401":
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: Unauthorized
                errors:
                  - Invalid or missing token
  /api/v1/users/update_device_token:
    patch:
      summary: Update FCM device token
      tags:
        - Users
      description: Updates the Firebase Cloud Messaging device token for push notifications.
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
              required:
                - device_token
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceTokenResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/movies:
    get:
      summary: List movies
      tags:
        - Movies
      description: Returns a paginated list of movies, filtered by title, genre, release_year, min_rating, or premium status. Non-premium users cannot access premium movies.
      security:
        - Bearer: []
      parameters:
        - name: title
          in: query
          schema:
            type: string
          description: Filter by movie title (partial match)
        - name: genre
          in: query
          schema:
            type: string
          description: Filter by movie genre
        - name: release_year
          in: query
          schema:
            type: integer
          description: Filter by release year
        - name: min_rating
          in: query
          schema:
            type: number
            format: float
          description: Filter by minimum rating
        - name: premium
          in: query
          schema:
            type: boolean
          description: Filter by premium status
        - name: page
          in: query
          schema:
            type: integer
          description: Page number for pagination
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create movie
      tags:
        - Movies
      description: Creates a new movie (supervisor-only). Supports poster and banner uploads via Cloudinary.
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                genre:
                  type: string
                release_year:
                  type: integer
                rating:
                  type: number
                  format: float
                director:
                  type: string
                duration:
                  type: integer
                main_lead:
                  type: string
                streaming_platform:
                  type: string
                description:
                  type: string
                premium:
                  type: boolean
                poster:
                  type: string
                  format: binary
                  description: Movie poster image
                banner:
                  type: string
                  format: binary
                  description: Movie banner image
              required:
                - title
                - genre
                - release_year
                - rating
                - director
                - duration
                - main_lead
                - streaming_platform
                - description
                - premium
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden (non-supervisor)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/movies/{id}:
    get:
      summary: Show movie
      tags:
        - Movies
      description: Returns details of a specific movie.
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update movie
      tags:
        - Movies
      description: Updates an existing movie (supervisor-only).
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                genre:
                  type: string
                release_year:
                  type: integer
                rating:
                  type: number
                  format: float
                director:
                  type: string
                duration:
                  type: integer
                main_lead:
                  type: string
                streaming_platform:
                  type: string
                description:
                  type: string
                premium:
                  type: boolean
                poster:
                  type: string
                  format: binary
                banner:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden (non-supervisor)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete movie
      tags:
        - Movies
      description: Deletes a movie (supervisor-only).
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden (non-supervisor)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/subscriptions:
    post:
      summary: Create a new subscription
      tags:
        - Subscriptions
      description: Creates a new subscription for the authenticated user based on the provided plan ID. For 'free' plans, the subscription is created directly. For 'basic' or 'premium' plans, a Stripe Payment Intent is created, and the client must confirm the payment using the returned client_secret. Requires a valid JWT token. Rate limited to 10 requests per minute per user.
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionCreateRequest"
      responses:
        "201":
          description: Subscription created successfully (for free plan)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionStatusResponse"
        "200":
          description: Stripe Payment Intent created (for basic/premium plans)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionPaymentIntentResponse"
        "400":
          description: Bad request (e.g., invalid plan ID)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity (e.g., validation errors)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/subscriptions/status:
    get:
      summary: Get current subscription status
      tags:
        - Subscriptions
      description: Retrieves the subscription status for the authenticated user. If the subscription is canceled and past its end_date, it transitions to a free plan. Requires a valid JWT token.
      security:
        - Bearer: []
      responses:
        "200":
          description: Subscription status retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionStatusResponse"
              example:
                plan: premium
                status: canceled
                current_period_end: "2025-12-31T23:59:59Z"
        "401":
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: No active subscription found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/subscriptions/confirm:
    post:
      summary: Confirm a subscription payment
      tags:
        - Subscriptions
      description: Confirms a subscription payment using the provided Stripe Payment Intent ID. Updates the subscription to 'active' if the payment is successful. Requires a valid JWT token. Rate limited to 10 requests per minute per user.
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionConfirmRequest"
      responses:
        "200":
          description: Payment confirmed and subscription activated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionConfirmResponse"
        "400":
          description: Bad request (e.g., payment not completed or invalid Payment Intent ID)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity (e.g., no pending subscription)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/subscriptions/cancel:
    post:
      summary: Cancel a subscription
      tags:
        - Subscriptions
      description: Cancels the authenticated userâ€™s active or past_due subscription. The subscription retains its plan_type and remains accessible until the current_period_end, after which it transitions to a free plan upon checking status. Requires a valid JWT token. Rate limited to 5 requests per minute per user.
      security:
        - Bearer: []
      responses:
        "200":
          description: Subscription canceled successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionCancelResponse"
              example:
                message: Subscription canceled successfully. You will revert to the free plan after 2025-12-31T23:59:59Z.
                plan: premium
                status: canceled
                current_period_end: "2025-12-31T23:59:59Z"
        "400":
          description: Bad request (e.g., no active or past_due subscription)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity (e.g., subscription cannot be canceled)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/webhooks/stripe:
    post:
      summary: Stripe webhook endpoint
      tags:
        - Webhooks
      description: Handles Stripe webhook events (e.g., payment intent successes, payment failures, invoice payment failures). Secured via Stripe webhook signature verification, not Bearer token.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stripe webhook payload
              example:
                id: evt_12345
                type: payment_intent.succeeded
                data:
                  object:
                    id: pi_12345
                    status: succeeded
                    metadata:
                      user_id: "1"
                      plan_id: premium
      responses:
        "200":
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookResponse"
        "400":
          description: Invalid payload or signature
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"